var express=require("express");var router=express.Router();var movieTrailer=require("movie-trailer");var Promise=require("bluebird");var fs=require("fs");var path=require("path");var request=require("request");var debug=process.env.NODE_ENV=="test"?false:true;var random=require("../lib/random");function errorMsg(msg){var message="Error: "+msg+' Click <a href=".">here</a> to refresh the page.';return message}router.get("/",(req,res)=>{if(debug)console.log("Page requested!");if(debug)console.log("Cookies: ",req.cookies);var file=path.join(__dirname,"../models/movies.json");var readDB=fileName=>{return new Promise((resolve,reject)=>{fs.readFile(fileName,(err,data)=>{if(err)res.send(err);var movies=JSON.parse(data);resolve(movies)})})};var selectRandom=movies=>{return new Promise((resolve,reject)=>{var randomMovie;if(Object.keys(req.query).length>0){if(req.query.index&&req.query.trailer)res.send(errorMsg("You can't call two parameters at once."));if(req.query.index){var index=Number(req.query.index);if((index||index==0)&&(index<movies.length&&index>=0))randomMovie={title:movies[index].title,imdbID:movies[index].imdbID,criticsScore:movies[index].criticsScore,usersScore:movies[index].usersScore};else res.send(errorMsg("Index is not a number or it's out of range."))}else if(req.query.trailer){randomMovie={title:req.query.trailer}}}else{var randomInt;if(req.cookies.randomInt){var cookieStr=req.cookies.randomInt;var cookieArr=typeof cookieStr=="string"?JSON.parse(cookieStr):cookieStr;randomInt=random.exclude(0,movies.length-1,cookieArr,debug);cookieArr.push(randomInt);res.cookie("randomInt",cookieArr)}else{randomInt=[random.exclude(0,movies.length-1,[0],debug)];res.cookie("randomInt",JSON.stringify(randomInt))}randomMovie=movies[randomInt];randomMovie.index=randomInt;resolve(randomMovie)}})};var netflixAPI=randomMovie=>{return new Promise((resolve,reject)=>{request("http://netflixroulette.net/api/api.php?title="+encodeURIComponent(randomMovie.title),(err,response,body)=>{if(err)throw err;if(debug)console.log("Flixroulette requested");var flixMovie=JSON.parse(body);if(flixMovie.errorcode!=404){Object.assign(randomMovie,flixMovie);resolve(randomMovie)}else{resolve(randomMovie)}})})};var requestTrailer=finalMovie=>{return new Promise((resolve,reject)=>{movieTrailer(finalMovie.title,(err,url)=>{if(debug)console.log("Requesting trailer for: ",finalMovie.title," with index ",finalMovie.index);if(err)res.status(404).send(errorMsg(err));else{var embedUrl=url.replace("watch?v=","embed/");if(debug)console.log("Video ID: ",url.slice(32,url.length));finalMovie.trailerURL=embedUrl;res.render("main",finalMovie,(err,html)=>{if(err)res.send(err);if(debug)console.log("Rendering...");if(debug)console.log(finalMovie);res.send(html);if(debug)console.log("Done!")})}})})};readDB(file).then(selectRandom).then(netflixAPI).then(requestTrailer)});module.exports=router;